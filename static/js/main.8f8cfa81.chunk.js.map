{"version":3,"sources":["app/index.module.scss","app/components/login-form/login-form.module.scss","app/components/game/guide-text/guide-text.module.scss","app/components/dashboard/dashboard.module.scss","app/components/game/guide-text/guide-text.js","app/components/game/input-field/input-field.js","app/util/firebase.js","app/components/game/game.js","app/components/login-form/login-form.js","app/components/dashboard/dashboard.js","app/index.js","index.js"],"names":["module","exports","GuideText","data","highlightedText","className","style","length","replace","InputField","value","onChangeHandler","onKeyPress","onChange","autoFocus","rows","placeholder","auth","email","password","window","firebase","signInWithEmailAndPassword","signOut","dataBase","database","ref","push","set","error","console","log","once","Game","state","srcText","textAreaValue","currentIndex","timer","timerDisplay","gameDone","isLoading","startTimer","timeArray","split","m","s","checkSecond","setState","gameFinish","sec","handleRequestError","res","ok","json","handleKeypress","event","key","this","fetchData","interval","setInterval","clearInterval","wordCount","Math","floor","wpm","ceil","totalPercentage","totalAverage","toFixed","saveGameDetails","props","onGameDone","userId","currentUser","uid","completion","actualTime","date","Date","toString","fetch","then","startGame","catch","e","textAlign","renderContent","color","React","Component","LoginForm","handleLogin","errorMessage","wrapper","initialValues","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","setTimeout","name","type","Dashboard","onGameStart","useState","history","setHistory","loading","setLoading","useEffect","isMounted","snapshot","src","val","Object","keys","forEach","id","filter","d","sort","a","b","getTime","dashboard","onClick","historyList","HistoryTable","map","list","toLocaleDateString","toLocaleTimeString","message","App","isSignedIn","loginErrorMessage","isIdle","closeResult","undefined","onAuthStateChange","fireBaseListener","onAuthStateChanged","user","app","renderResult","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f8cfa81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__2ENaR\",\"game-result-overlay\":\"app_game-result-overlay__2Xrou\",\"game-result\":\"app_game-result__29UlW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login-form_wrapper__3CY0p\",\"error\":\"login-form_error__6l6W8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"guide-text\":\"guide-text_guide-text__2R-TK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"dashboard_dashboard__IPU-I\"};","import React from 'react';\r\nimport style from './guide-text.module.scss';\r\n\r\nconst GuideText = ({ data, highlightedText }) => {\r\n  return (\r\n    <section className={style['guide-text']}>\r\n      {highlightedText.length ? (\r\n        <p>\r\n          <mark>{highlightedText}</mark>\r\n          {data.replace(highlightedText, '')}\r\n        </p>\r\n      ) : (\r\n        <p>{data}</p>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GuideText;\r\n","import React from 'react';\r\nimport './input-field.module.scss';\r\n\r\nconst InputField = ({ value, onChangeHandler }) => {\r\n  return (\r\n    <textarea\r\n      onKeyPress={onChangeHandler}\r\n      onChange={() => {}}\r\n      autoFocus\r\n      rows='7'\r\n      placeholder='Start typing here!'\r\n      value={value}\r\n    ></textarea>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","export const auth = {\r\n  signIn: (email, password) =>\r\n    window.firebase.auth().signInWithEmailAndPassword(email, password),\r\n  signOut: () => window.firebase.auth().signOut(),\r\n  checkAuthState: (callback) =>\r\n    window.firebase.auth().onAuthStateChanged((user) => callback(user)),\r\n};\r\n\r\nexport const dataBase = {\r\n  addNewData: (data) => {\r\n    const postListRef = window.firebase.database().ref('history/');\r\n    const newPostRef = postListRef.push();\r\n    newPostRef.set(data, (error) => error && console.log(error));\r\n  },\r\n  getHistory: () => {\r\n    return window.firebase.database().ref('/history/').once('value');\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nimport GuideText from './guide-text/guide-text';\r\nimport InputField from './input-field/input-field';\r\nimport { dataBase } from '../../util/firebase';\r\n\r\nconst SRC_TEXT_API_URL = 'https://baconipsum.com/api/?type=meat&paras=3';\r\n\r\nclass Game extends React.Component {\r\n  state = {\r\n    srcText: '',\r\n    textAreaValue: '',\r\n    currentIndex: 0,\r\n    timer: 0,\r\n    timerDisplay: '3:00',\r\n    gameDone: false,\r\n    isLoading: true,\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  startGame() {\r\n    const interval = setInterval(() => {\r\n      this.startTimer();\r\n      if (this.state.gameDone) {\r\n        clearInterval(interval);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  startTimer = () => {\r\n    const timeArray = this.state.timerDisplay.split(/[:]+/);\r\n    let m = timeArray[0];\r\n    let s = this.checkSecond(timeArray[1] - 1);\r\n    if (+s === 59) {\r\n      m = m - 1;\r\n    }\r\n    this.setState({ timer: this.state.timer + 1, timerDisplay: `${m}:${s}` });\r\n    if (+m === 0 && +s === 0) {\r\n      this.gameFinish();\r\n    }\r\n  };\r\n\r\n  checkSecond = (sec) => {\r\n    if (sec < 10 && sec >= 0) {\r\n      sec = '0' + sec;\r\n    }\r\n    if (sec < 0) {\r\n      sec = '59';\r\n    }\r\n    return sec;\r\n  };\r\n\r\n  gameFinish() {\r\n    const { textAreaValue, timer, srcText } = this.state;\r\n    const wordCount = Math.floor(textAreaValue.length / 5); // based on wiki\r\n    const wpm = Math.ceil(wordCount / (timer / 60));\r\n    const totalPercentage = (textAreaValue.length / srcText.length) * 100;\r\n    const totalAverage = `${\r\n      totalPercentage % 1 !== 0 ? totalPercentage.toFixed(2) : totalPercentage\r\n    }%`;\r\n    this.setState({ gameDone: true });\r\n    this.saveGameDetails(totalAverage, wpm);\r\n    this.props.onGameDone(totalAverage, wpm);\r\n  }\r\n\r\n  saveGameDetails(totalAverage, wpm) {\r\n    dataBase.addNewData({\r\n      userId: window.firebase.auth().currentUser.uid,\r\n      wpm: wpm,\r\n      completion: totalAverage,\r\n      actualTime: this.state.timer,\r\n      date: new Date().toString(),\r\n    });\r\n  }\r\n\r\n  fetchData() {\r\n    fetch(SRC_TEXT_API_URL)\r\n      .then(this.handleRequestError)\r\n      .then((data) => {\r\n        this.setState({\r\n          srcText: data[0].replace('  ', ' '),\r\n          isLoading: false,\r\n        });\r\n        this.startGame();\r\n      })\r\n      .catch((e) => {\r\n        this.setState({\r\n          error: 'Something went wrong, please check your connection',\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleRequestError = (res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      this.setState({\r\n        error: 'Error from the response.',\r\n        isLoading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleKeypress = (event) => {\r\n    const { srcText, currentIndex, textAreaValue } = this.state;\r\n    if (event.key === srcText[currentIndex] && currentIndex < srcText.length) {\r\n      this.setState({\r\n        currentIndex: currentIndex + 1,\r\n        textAreaValue: textAreaValue + event.key,\r\n      });\r\n    }\r\n    if (textAreaValue.length === srcText.length) {\r\n      this.gameFinish();\r\n    }\r\n  };\r\n\r\n  renderContent() {\r\n    return (\r\n      <>\r\n        <h3 style={{ textAlign: 'center' }}>{this.state.timerDisplay}</h3>\r\n        <GuideText\r\n          data={this.state.srcText}\r\n          highlightedText={this.state.textAreaValue}\r\n        />\r\n        <InputField\r\n          value={this.state.textAreaValue}\r\n          onChangeHandler={this.handleKeypress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { srcText, error, isLoading } = this.state;\r\n    if (srcText) {\r\n      return this.renderContent();\r\n    }\r\n    if (isLoading) {\r\n      return <em>loading ...</em>;\r\n    }\r\n    if (error) {\r\n      return <em style={{ color: 'red' }}>{error}</em>;\r\n    }\r\n    return <em>Something went wrong!</em>;\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport style from './login-form.module.scss';\r\n\r\nconst LoginForm = ({ handleLogin, errorMessage }) => {\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .email('Invalid email address.')\r\n            .required('Email is required.'),\r\n          password: Yup.string()\r\n            .min(6, 'Must at least 6 character.')\r\n            .required('Password is required.'),\r\n        })}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            handleLogin(values);\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        <Form>\r\n          <h3>Please login to proceed.</h3>\r\n          <hr />\r\n          {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n          <div>\r\n            <Field\r\n              placeholder='Email address'\r\n              name='email'\r\n              type='email'\r\n              autoFocus\r\n            />\r\n            <span className={style.error}>\r\n              <ErrorMessage name='email' />\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <Field placeholder='Password' name='password' type='password' />\r\n            <span className={style.error}>\r\n              <ErrorMessage name='password' />\r\n            </span>\r\n          </div>\r\n          <button type='submit'>Submit</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { dataBase, auth } from '../../util/firebase';\r\nimport style from './dashboard.module.scss';\r\n\r\nconst Dashboard = ({ onGameStart }) => {\r\n  const [history, setHistory] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    dataBase\r\n      .getHistory()\r\n      .then((snapshot) => {\r\n        const src = snapshot.val();\r\n        const data = [];\r\n        setLoading(false);\r\n\r\n        if (isMounted && !!src) {\r\n          Object.keys(src).forEach((key) =>\r\n            data.push({ ...src[key], id: key })\r\n          );\r\n          setHistory(\r\n            data\r\n              .filter(\r\n                (d) => d.userId === window.firebase.auth().currentUser.uid\r\n              )\r\n              .sort(\r\n                (a, b) =>\r\n                  new Date(b.date).getTime() - new Date(a.date).getTime()\r\n              )\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    return () => (isMounted = false);\r\n  });\r\n\r\n  return (\r\n    <div className={style.dashboard}>\r\n      <div>\r\n        <span>\r\n          {window.firebase.auth().currentUser.email} |{' '}\r\n          <button onClick={signOut}>Logout</button>\r\n        </span>\r\n        <h1>Type Racer game</h1>\r\n        <ul>\r\n          <li>Each game has 3 minutes to complete.</li>\r\n          <li>Each will show the game result one finished.</li>\r\n          <li>Once the start button is triggered, the timer will start.</li>\r\n          <li>Once done ahead of given time, please press enter to submit</li>\r\n        </ul>\r\n        <h3>\r\n          Test your typing skills{' '}\r\n          <button onClick={onGameStart}>Start Now!</button>\r\n        </h3>\r\n      </div>\r\n      {history.length ? (\r\n        <HistoryTable historyList={history} />\r\n      ) : loading ? (\r\n        <em>loading ...</em>\r\n      ) : (\r\n        <>Game history is empty.</>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\nconst HistoryTable = ({ historyList }) => {\r\n  return (\r\n    <>\r\n      <h3>Game history</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Actual Time (Seconds)</th>\r\n            <th>Completed %</th>\r\n            <th>Words per minute (WPM)</th>\r\n            <th>Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {historyList.map((list) => (\r\n            <tr key={list.id}>\r\n              <td>{list.actualTime}</td>\r\n              <td>{list.completion}</td>\r\n              <td>{list.wpm}</td>\r\n              <td>\r\n                {new Date(list.date).toLocaleDateString()}{' '}\r\n                {new Date(list.date).toLocaleTimeString()}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nconst signOut = () => {\r\n  auth\r\n    .signOut()\r\n    .then(() => console.log('successfully signed out!'))\r\n    .catch((error) => this.setState({ errorMessage: error.message }));\r\n};\r\n","import React from 'react';\r\n\r\nimport style from './index.module.scss';\r\nimport Game from './components/game/game';\r\nimport LoginForm from './components/login-form/login-form';\r\nimport Dashboard from './components/dashboard/dashboard';\r\n\r\nimport { auth } from './util/firebase';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSignedIn: undefined,\r\n      isIdle: true,\r\n      loginErrorMessage: '',\r\n      totalAverage: 0,\r\n      wpm: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onAuthStateChange();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.fireBaseListener && this.fireBaseListener();\r\n    this.onAuthStateChange = undefined;\r\n  }\r\n\r\n  onAuthStateChange() {\r\n    this.fireBaseListener = window.firebase\r\n      .auth()\r\n      .onAuthStateChanged((user) => this.setState({ isSignedIn: !!user }));\r\n  }\r\n\r\n  handleLogin = (data) => {\r\n    auth\r\n      .signIn(data.email, data.password)\r\n      .then(() => this.setState({ isSignedIn: true, errorMessage: '' }))\r\n      .catch((error) => this.setState({ loginErrorMessage: error.message }));\r\n  };\r\n\r\n  startGame = () => {\r\n    this.setState({ isIdle: false });\r\n  };\r\n\r\n  gameDone = (totalAverage, wpm) => {\r\n    this.setState({ isIdle: true, totalAverage, wpm });\r\n  };\r\n\r\n  closeResult = () => {\r\n    this.setState({ wpm: 0, totalAverage: 0 });\r\n  };\r\n\r\n  renderResult() {\r\n    return (\r\n      <div className={style['game-result-overlay']}>\r\n        <div className={style['game-result']}>\r\n          <h3>Game Result:</h3>\r\n          <div>\r\n            <span>\r\n              Completed: <strong>{this.state.totalAverage}</strong>\r\n            </span>\r\n            <span>\r\n              WPM Average: <strong>{this.state.wpm}</strong>\r\n            </span>\r\n          </div>\r\n          <button onClick={() => this.setState({ isIdle: false })}>\r\n            Try Again\r\n          </button>\r\n          <button onClick={this.closeResult}>Close</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className={style.app}>\r\n        {this.state.isSignedIn === undefined ? (\r\n          <em>loading ...</em>\r\n        ) : this.state.isSignedIn && this.state.isIdle ? (\r\n          <>\r\n            {this.state.wpm && this.state.totalAverage\r\n              ? this.renderResult()\r\n              : null}\r\n            <Dashboard onGameStart={this.startGame} />\r\n          </>\r\n        ) : this.state.isSignedIn && !this.state.isIdle ? (\r\n          <Game onGameDone={this.gameDone} />\r\n        ) : (\r\n          <LoginForm\r\n            handleLogin={this.handleLogin}\r\n            errorMessage={this.state.loginErrorMessage}\r\n          />\r\n        )}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}